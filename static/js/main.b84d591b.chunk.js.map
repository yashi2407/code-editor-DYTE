{"version":3,"sources":["Capture.PNG","App.js","reportWebVitals.js","index.js"],"names":["App","showcss","e","setState","prevState","displaycss","showjs","displayjs","showhtml","displayhtml","runCode","state","html","css","js","document","refs","iframe","contentDocument","documentContents","open","write","close","id","this","pushid","inStyle","inStylecss","inStylejs","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","display","height","overflow","position","className","src","logo","alt","class","onClick","style","value","options","mode","onBeforeChange","editor","data","title","ref","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b84d591b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Capture.e3d13555.PNG\";","import React, { Component } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport pushid from 'pushid';\nimport './App.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/javascript/javascript';\nimport logo from '../src/Capture.PNG';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      html: '',\n      css: '',\n      js: '',\n      displayhtml:false,\n      displaycss:false,\n      displayjs:false\n    };\n  }\n  \n  showcss = (e) => {\n    this.setState(prevState => ({\n      displaycss: !prevState.displaycss\n    }));\n  }\n  showjs = (e) => {\n    this.setState(prevState => ({\n      displayjs: !prevState.displayjs\n    }));\n  }\n  showhtml = (e) => {\n    this.setState(prevState => ({\n      displayhtml: !prevState.displayhtml\n    }));\n  }\n  \n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: pushid(),\n    });\n  }\n\n  runCode = () => {\n    const { html, css, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render() {\n    const { html, js, css } = this.state;\n    const codeMirrorOptions = {\n      theme: 'material',\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true,\n    };\n    let inStyle,inStylecss,inStylejs;\n    if(this.state.displayhtml ===true) {\n       inStyle = {\n        display:'block',\n        height: '33.33%',\n        overflow: 'hidden',\n        position: 'relative'\n      }\n    }\n    else \n    {\n      inStyle = \n      {\n       display:'none',\n     }\n    }\n    if(this.state.displaycss ===true) {\n      inStylecss = {\n       display:'block',\n       height: '33.33%',\n       overflow: 'hidden',\n       position: 'relative'\n     }\n   }\n   else \n   {\n    inStylecss = \n    {\n     display:'none',\n     }\n    }\n    if(this.state.displayjs ===true) {\n      inStylejs = {\n       display:'block',\n       height: '33.33%',\n       overflow: 'hidden',\n       position: 'relative'\n     }\n   }\n   else \n   {\n    inStylejs = \n    {\n     display:'none',\n     }\n    }\n  \n\n    return (\n      <div className=\"App\">\n        <div className=\"logo\">\n          <img src={logo} alt=\"logo\"></img>\n          <h1>Code Editor</h1>\n        </div>\n        <div className='maincontent'>\n          <section class=\"navbar\">\n            <span className=\"nav-content\"><b>Choose the editor you want to work with: </b></span>\n            <div className=\"items\">\n              <button onClick={this.showhtml}>index.html</button>\n              <button onClick={this.showcss}>index.css</button>\n              <button onClick={this.showjs}>index.js</button>\n            </div>\n          </section>\n          <section className=\"playground\">\n            <div className=\"code-editor html-code\" style={inStyle}>\n              <div className=\"editor-header\">HTML</div>\n              <CodeMirror\n                value={html}\n                options={{\n                  mode: 'htmlmixed',\n                  ...codeMirrorOptions,\n                }}\n                onBeforeChange={(editor, data, html) => {\n                  this.setState({ html });\n                }}\n              />\n            </div>\n            <div className=\"code-editor css-code\" style={inStylecss}>\n              <div className=\"editor-header\">CSS</div>\n              <CodeMirror\n                value={css}\n                options={{\n                  mode: 'css',\n                  ...codeMirrorOptions,\n                }}\n                onBeforeChange={(editor, data, css) => {\n                  this.setState({ css });\n                }}\n              />\n            </div>\n            <div className=\"code-editor js-code\" style={inStylejs}>\n              <div className=\"editor-header\">JavaScript</div>\n              <CodeMirror\n                value={js}\n                options={{\n                  mode: 'javascript',\n                  ...codeMirrorOptions,\n                }}\n                onBeforeChange={(editor, data, js) => {\n                  this.setState({ js });\n                }}\n              />\n            </div>\n          </section>\n        </div>\n        \n        <section className=\"result\">\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}